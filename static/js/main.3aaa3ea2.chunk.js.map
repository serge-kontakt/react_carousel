{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","disableRightButton","disableLeftButton","oneStep","scrollRight","props","itemWidth","step","infinite","images","frameSize","maxSteps","length","newStep","Math","max","setState","scrollLeft","min","prevProps","this","prevState","animationDuration","startIndex","floor","endIndex","className","style","width","overflow","transform","transition","map","image","index","isVisible","visibility","src","alt","toString","type","onClick","Component","App","changeInput","e","target","name","value","checked","htmlFor","id","onChange","required","React","ReactDOM","render","document","getElementById"],"mappings":"qQAkBaA,EAAb,4MACEC,MAAyB,CACvBC,oBAAoB,EACpBC,mBAAmB,EACnBC,QAAS,GAJb,EAOEC,YAAc,WACZ,MAMI,EAAKC,MALPC,EADF,EACEA,UACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,UAEF,EAAwC,EAAKV,MAArCC,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,QACtBQ,EAAWF,EAAOG,OAASF,EAEjC,IAAIT,IAAmC,IAAbO,EAA1B,CAIA,IAAIK,EAAUV,EAAUG,EAAYC,EAEpCM,EAAUC,KAAKC,IAAIF,GAAUP,EAAYK,GAErCV,GAAsBO,IACxBK,EAAU,GAGZ,EAAKG,SAAS,CACZf,mBAAoBY,KAAaP,EAAYK,EAC7CT,kBAA+B,IAAZW,EACnBV,QAAUF,GAAsBO,EAAY,EAAIK,MAjCtD,EAqCEI,WAAa,WACX,MAMI,EAAKZ,MALPC,EADF,EACEA,UACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,UAEF,EAAuC,EAAKV,MAApCE,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,QAE3B,IAAID,IAAkC,IAAbM,EAAzB,CAIA,IAAIK,EAAUV,EAAUG,EAAYC,EAEpCM,EAAUC,KAAKI,IAAIL,EAAS,GAExBX,GAAqBM,IACvBK,GAAWP,GAAaG,EAAOG,OAASF,IAG1C,EAAKM,SAAS,CACZd,kBAA+B,IAAZW,EACnBZ,mBAAoBY,KACfP,GAAaG,EAAOG,OAASF,GAClCP,QAAUD,GAAqBM,GACzBF,GAAaG,EAAOG,OAASF,GAC/BG,MAjEV,wDAqEE,SAAmBM,GACjB,GAAIA,EAAUb,YAAcc,KAAKf,MAAMC,UAAW,CAChD,IAAQA,EAAcc,KAAKf,MAAnBC,UAERc,KAAKJ,UAAS,SAACK,GAAD,MAAgB,CAC5BlB,QAASkB,EAAUlB,SAAWG,EAAYa,EAAUb,kBA1E5D,oBA+EE,WACE,MAMIc,KAAKf,MALPI,EADF,EACEA,OACAH,EAFF,EAEEA,UACAI,EAHF,EAGEA,UACAY,EAJF,EAIEA,kBACAd,EALF,EAKEA,SAEF,EAA2DY,KAAKpB,MAAxDC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,kBAAmBC,EAA/C,EAA+CA,QAEzCoB,EAAaT,KAAKC,IAAI,GAAID,KAAKU,MAAMrB,EAAUG,IAC/CmB,EAAWX,KAAKI,IAAIT,EAAOG,OAAS,EAAGW,EAAab,EAAY,GAEtE,OACE,sBAAKgB,UAAU,WAAf,UACE,qBAAKC,MAAO,CAAEC,MAAOtB,EAAYI,EAAWmB,SAAU,UAAtD,SACE,oBACEH,UAAU,iBACVC,MAAO,CACLC,MAAOtB,EAAYG,EAAOG,OAC1BkB,UAAU,aAAD,OAAe3B,EAAf,OACT4B,WAAW,aAAD,OAAeT,EAAf,OALd,SAQGb,EAAOuB,KAAI,SAACC,EAAOC,GAClB,IAAMC,EAAYD,GAASX,GAAcW,GAAST,EAElD,OACE,oBAEEE,MAAO,CACLS,WAAYD,EAAY,UAAY,SACpCJ,WAAW,cAAD,OAAgBT,EAAhB,OAJd,SAOE,qBACEe,IAAKJ,EACLK,KAAMJ,EAAQ,GAAGK,WACjBX,MAAOtB,KATJ2B,UAiBf,sBACEP,UAAU,oBACVC,MAAO,CAAEC,MAAOtB,EAAYI,GAF9B,UAIE,wBACE8B,KAAK,SACL,aAAW,OACXd,UAAS,kDAA8CxB,IAAkC,IAAbM,EAAsB,4BAA8B,IAChIiC,QAASrB,KAAKH,aAEhB,wBACEuB,KAAK,SACL,aAAW,OACX,UAAQ,OACRd,UAAS,mDAA+CzB,IAAmC,IAAbO,EAAsB,4BAA8B,IAClIiC,QAASrB,KAAKhB,wBA5I1B,GAA8BsC,aCLxBC,E,4MACJ3C,MAAQ,CACNS,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFF,KAAM,EACNG,UAAW,EACXJ,UAAW,IACXgB,kBAAmB,IACnBd,UAAU,G,EAGZoC,YAAc,SAACC,GACb,MAKIA,EAAEC,OAJJC,EADF,EACEA,KACAC,EAFF,EAEEA,MACAR,EAHF,EAGEA,KACAS,EAJF,EAIEA,QAGF,EAAKjC,UAAS,SAACK,GAAD,mBAAC,eACVA,GADS,kBAEX0B,EAAgB,aAATP,EAAsBS,EAAUD,Q,4CAI5C,WACE,MAOI5B,KAAKpB,MANPS,EADF,EACEA,OACAF,EAFF,EAEEA,KACAG,EAHF,EAGEA,UACAJ,EAJF,EAIEA,UACAgB,EALF,EAKEA,kBACAd,EANF,EAMEA,SAGF,OACE,sBAAKkB,UAAU,MAAf,UAEE,oBAAI,UAAQ,QAAZ,iCAAsCjB,EAAOG,OAA7C,aAEA,wBAAOsC,QAAQ,SAAf,uBAEE,uBACEV,KAAK,SACLW,GAAG,SACHJ,KAAK,YACLC,MAAO1C,EACP8C,SAAUhC,KAAKwB,YACfS,UAAQ,OAIZ,wBAAOH,QAAQ,UAAf,uBAEE,uBACEV,KAAK,SACLW,GAAG,UACHJ,KAAK,YACLC,MAAOtC,EACP0C,SAAUhC,KAAKwB,YACfS,UAAQ,OAIZ,wBAAOH,QAAQ,SAAf,iBAEE,uBACEV,KAAK,SACLW,GAAG,SACHJ,KAAK,OACLC,MAAOzC,EACP6C,SAAUhC,KAAKwB,YACfS,UAAQ,OAIZ,wBAAOH,QAAQ,cAAf,+BAEE,uBACEV,KAAK,SACLW,GAAG,cACHJ,KAAK,oBACLC,MAAO1B,EACP8B,SAAUhC,KAAKwB,YACfS,UAAQ,OAIZ,wBAAOH,QAAQ,aAAf,qBAEE,uBACEV,KAAK,WACLW,GAAG,aACHJ,KAAK,WACLE,QAASzC,EACT4C,SAAUhC,KAAKwB,iBAInB,cAAC,EAAD,CACEnC,OAAQA,EACRF,KAAMA,EACNG,UAAWA,EACXJ,UAAWA,EACXgB,kBAAmBA,EACnBd,SAAUA,W,GAnHF8C,IAAMZ,WA0HTC,ICpIfY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3aaa3ea2.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  disableRightButton: boolean;\n  disableLeftButton: boolean;\n  oneStep: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    disableRightButton: false,\n    disableLeftButton: true,\n    oneStep: 0,\n  };\n\n  scrollRight = () => {\n    const {\n      itemWidth,\n      step,\n      infinite,\n      images,\n      frameSize,\n    } = this.props;\n    const { disableRightButton, oneStep } = this.state;\n    const maxSteps = images.length - frameSize;\n\n    if (disableRightButton && infinite === false) {\n      return;\n    }\n\n    let newStep = oneStep - itemWidth * step;\n\n    newStep = Math.max(newStep, -itemWidth * maxSteps);\n\n    if (disableRightButton && infinite) {\n      newStep = 0;\n    }\n\n    this.setState({\n      disableRightButton: newStep === -itemWidth * maxSteps,\n      disableLeftButton: newStep === 0,\n      oneStep: (disableRightButton && infinite) ? 0 : newStep,\n    });\n  };\n\n  scrollLeft = () => {\n    const {\n      itemWidth,\n      step,\n      infinite,\n      images,\n      frameSize,\n    } = this.props;\n    const { disableLeftButton, oneStep } = this.state;\n\n    if (disableLeftButton && infinite === false) {\n      return;\n    }\n\n    let newStep = oneStep + itemWidth * step;\n\n    newStep = Math.min(newStep, 0);\n\n    if (disableLeftButton && infinite) {\n      newStep = -itemWidth * (images.length - frameSize);\n    }\n\n    this.setState({\n      disableLeftButton: newStep === 0,\n      disableRightButton: newStep\n      === -itemWidth * (images.length - frameSize),\n      oneStep: (disableLeftButton && infinite)\n        ? (-itemWidth * (images.length - frameSize))\n        : newStep,\n    });\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.itemWidth !== this.props.itemWidth) {\n      const { itemWidth } = this.props;\n\n      this.setState((prevState) => ({\n        oneStep: prevState.oneStep * (itemWidth / prevProps.itemWidth),\n      }));\n    }\n  }\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n    const { disableRightButton, disableLeftButton, oneStep } = this.state;\n\n    const startIndex = Math.max(0, -Math.floor(oneStep / itemWidth));\n    const endIndex = Math.min(images.length - 1, startIndex + frameSize - 1);\n\n    return (\n      <div className=\"Carousel\">\n        <div style={{ width: itemWidth * frameSize, overflow: 'hidden' }}>\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: itemWidth * images.length,\n              transform: `translate(${oneStep}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => {\n              const isVisible = index >= startIndex && index <= endIndex;\n\n              return (\n                <li\n                  key={image}\n                  style={{\n                    visibility: isVisible ? 'visible' : 'hidden',\n                    transition: `visibility ${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    src={image}\n                    alt={(index + 1).toString()}\n                    width={itemWidth}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div\n          className=\"Carousel__buttons\"\n          style={{ width: itemWidth * frameSize }}\n        >\n          <button\n            type=\"button\"\n            aria-label=\"Prev\"\n            className={`Carousel__button Carousel__button--left ${(disableLeftButton && infinite === false) ? 'Carousel__button--disable' : ''}`}\n            onClick={this.scrollLeft}\n          />\n          <button\n            type=\"button\"\n            aria-label=\"Next\"\n            data-cy=\"next\"\n            className={`Carousel__button Carousel__button--right ${(disableRightButton && infinite === false) ? 'Carousel__button--disable' : ''}`}\n            onClick={this.scrollRight}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n    } = e.target;\n\n    this.setState((prevState: Readonly<State>) => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <label htmlFor=\"itemId\">\n          Item Width\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            name=\"itemWidth\"\n            value={itemWidth}\n            onChange={this.changeInput}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"frameId\">\n          Frame Size\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            name=\"frameSize\"\n            value={frameSize}\n            onChange={this.changeInput}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"stepId\">\n          Step\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            name=\"step\"\n            value={step}\n            onChange={this.changeInput}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"animationId\">\n          Animation Duration\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            name=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.changeInput}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"infiniteId\">\n          Infinite\n          <input\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            name=\"infinite\"\n            checked={infinite}\n            onChange={this.changeInput}\n          />\n        </label>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}